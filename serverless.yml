# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: antoniocaccioppola
service: user-api

provider:
  name: aws
  runtime: python3.8
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource: "arn:aws:dynamodb:*:*:table/${self:service}-${opt:stage, self:provider.stage}"

functions:
  app:
    handler: handler.handler
    events:
      - http:
          path: createUser
          method: post
      - http:
          path: getUserById/{user_id}
          method: get

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
