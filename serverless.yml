# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: antoniocaccioppola
service: user-api

provider:
  name: aws
  runtime: python3.8
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource: "arn:aws:dynamodb:*:*:table/${self:service}-${opt:stage, self:provider.stage}"

functions:
  app:
    handler: handler.handler
    events:
      - http:
          path: createUser
          method: post
          documentation:
            summary: Crea un nuovo utente nel database.
            description: |
              Questo endpoint consente di creare un nuovo utente nel database DynamoDB.
              Il payload della richiesta deve essere un oggetto JSON con i campi 'name' e 'email'.
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Nome dell'utente.
                      email:
                        type: string
                        format: email
                        description: Indirizzo email dell'utente.
            responses:
              '201':
                description: Utente creato con successo.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        userId:
                          type: string
                          description: ID univoco generato per l'utente.
                        name:
                          type: string
                          description: Nome dell'utente.
                        email:
                          type: string
                          description: Indirizzo email dell'utente.
              '400':
                description: Errore nella richiesta.
              '500':
                description: Errore interno del server.

      - http:
          path: getUserById/{user_id}
          method: get
          documentation:
            summary: Ottiene le informazioni di un utente dal database utilizzando l'ID.
            description: |
              Questo endpoint consente di ottenere le informazioni di un utente dal database DynamoDB utilizzando l'ID utente specificato nell'URL.
            parameters:
              - name: user_id
                in: path
                required: true
                description: ID univoco dell'utente.
                schema:
                  type: string
            responses:
              '200':
                description: Informazioni utente ottenute con successo.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        userId:
                          type: string
                          description: ID univoco dell'utente.
                        name:
                          type: string
                          description: Nome dell'utente.
                        email:
                          type: string
                          description: Indirizzo email dell'utente.
              '404':
                description: Utente non trovato.
              '500':
                description: Errore interno del server.

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
